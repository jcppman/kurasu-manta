import * as schema from '@/drizzle/schema'
import { drizzle } from 'drizzle-orm/node-postgres'
import { migrate } from 'drizzle-orm/node-postgres/migrator'
import { newDb } from 'pg-mem'

export const createInMemoryDb = async () => {
  // Create an in-memory PostgreSQL database using pg-mem
  const db = newDb()

  // Get a PostgreSQL client from pg-mem
  const { Client } = db.adapters.createPg()
  const client = new Client()
  await client.connect()

  // Create Drizzle instance
  const drizzleDb = drizzle(client, { schema })

  // Apply schema by creating tables directly since we don't have migrations yet
  await client.query(`
    CREATE TABLE IF NOT EXISTS "lessons" (
      "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
      "number" integer NOT NULL UNIQUE,
      "title" text,
      "description" text,
      "created_at" timestamp DEFAULT now() NOT NULL,
      "updated_at" timestamp DEFAULT now() NOT NULL
    );
  `)

  await client.query(`
    CREATE TABLE IF NOT EXISTS "knowledge_points" (
      "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
      "lesson_id" integer NOT NULL REFERENCES "lessons"("id") ON DELETE CASCADE,
      "type" text NOT NULL,
      "content" text NOT NULL,
      "explanation" jsonb,
      "type_specific_data" jsonb,
      "created_at" timestamp DEFAULT now() NOT NULL,
      "updated_at" timestamp DEFAULT now() NOT NULL
    );
  `)

  await client.query(`
    CREATE TABLE IF NOT EXISTS "sentences" (
      "id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
      "content" text NOT NULL,
      "explanation" jsonb NOT NULL,
      "annotations" jsonb,
      "audio" text,
      "min_lesson_number" integer NOT NULL,
      "created_at" timestamp DEFAULT now() NOT NULL,
      "updated_at" timestamp DEFAULT now() NOT NULL
    );
  `)

  await client.query(`
    CREATE TABLE IF NOT EXISTS "sentence_knowledge_points" (
      "sentence_id" integer NOT NULL REFERENCES "sentences"("id") ON DELETE CASCADE,
      "knowledge_point_id" integer NOT NULL REFERENCES "knowledge_points"("id") ON DELETE CASCADE,
      "created_at" timestamp DEFAULT now() NOT NULL,
      PRIMARY KEY ("sentence_id", "knowledge_point_id")
    );
  `)

  return drizzleDb
}
